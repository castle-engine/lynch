{ AUTO-GENERATED PROGRAM FILE.

  This file is used to build and run the application on desktop (standalone) platforms,
  from various tools:
  - Castle Game Engine command-line build tool
  - Castle Game Engine editor
  - Lazarus IDE
  - Delphi IDE

  You should not modify this file manually.
  Regenerate it using CGE editor "Code -> Regenerate Program" menu item
  or the command-line: "castle-engine generate-program".
  Along with this file, we also generate CastleAutoGenerated unit. }

{ Do not specify program name below.
  It is not used anyway, and this way allows developer
  to change standalone_source in CastleEngineManifest.xml easier. }
// program lynch_standalone;

{$ifdef MSWINDOWS} {$apptype GUI} {$endif}

{ This adds icons and version info for Windows,
  automatically created by "castle-engine compile". }
{$ifdef CASTLE_AUTO_GENERATED_RESOURCES} {$R castle-auto-generated-resources.res} {$endif}

uses
  {$if defined(FPC) and (not defined(CASTLE_DISABLE_THREADS))}
    {$info Thread support enabled.}
    {$ifdef UNIX} CThreads, {$endif}
  {$endif}
  CastleAutoGenerated, CastleWindow, GameInitialize;

{ Include this in your program file to force using a dedicated GPU
  for OpenGL with Delphi and FreePascal/Lazarus
  on Multi-GPU systems such as Notebooks on Windows.

  See Castle Game Engine src/common_includes/request_dedicated_gpu.inc }

// uncomment and recomment this line, for compile-time-switching between integrated GPU and dedicated GPU
{$define ForceDedicatedGPUUsage}

{$if defined(ForceDedicatedGPUUsage) and (defined(cpu386) or defined(cpux64) or defined(cpuamd64)) and (not defined(Darwin))}

{$ifdef fpc}
 {$asmmode intel}
{$endif}

procedure NvOptimusEnablement; {$ifdef fpc}assembler; nostackframe;{$endif}
asm
{$ifdef cpu64}
{$ifndef fpc}
 .NOFRAME
{$endif}
{$endif}
 dd 1
end;

procedure AmdPowerXpressRequestHighPerformance; {$ifdef fpc}assembler; nostackframe;{$endif}
asm
{$ifdef cpu64}
{$ifndef fpc}
 .NOFRAME
{$endif}
{$endif}
 dd 1
end;

exports
  NvOptimusEnablement,
  AmdPowerXpressRequestHighPerformance;
{$ifend}

begin
  Application.MainWindow.OpenAndRun;
end.
